{
    "openapi": "3.0.0",
    "info": {
        "title": "Omni Dev Api's",
        "description": "Api Documentation",
        "version": "v2",
        "x-logo": {
            "url": "https://omni-redoc-bucket-dev.s3.amazonaws.com/logo.png",
            "backgroundColor": "#FFFFFF",
            "altText": "Bizcloud logo"
        }
    },
    "servers": [
        {
            "url": "https://dev-api.omnilogistics.com"
        }
    ],
    "tags": [
        {
            "name": "Shipment"
        },
        {
            "name": "ivia"
        },
        {
            "name": "WMS"
        }
    ],
    "paths": {
        "/v2/shipment/addmilestone": {
            "post": {
                "operationId": "/v2/shipment/addmilestone",
                "summary": "Add Milestone",
                "tags": [
                    "Shipment"
                ],
                "consumes": [
                    "application/json"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\nimport json\n\nurl = \"https://dev-api.omnilogistics.com/v2/shipment/addmilestone\"\n\npayload = json.dumps({\n  \"addMilestoneRequest\": {\n    \"housebill\": \"85673791233\",\n    \"statusCode\": \"CAN\",\n    \"eventTime\": \"2023-07-13T23:15:00-05:00\"\n  }\n})\nheaders = {\n  'x-api-key': '<X-API-KEY>',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)"
                    },
                    {
                        "lang": "Curl",
                        "source": "curl --location 'https://dev-api.omnilogistics.com/v2/shipment/addmilestone' --header 'x-api-key: <X-API-KEY>' --header 'Content-Type: application/json' --data '{\"addMilestoneRequest\":{\"housebill\":\"85673791233\",\"statusCode\":\"CAN\",\"eventTime\":\"2023-07-13T23:15:00-05:00\"}}'"
                    },
                    {
                        "lang": "JavaScript",
                        "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"addMilestoneRequest\": {\n    \"housebill\": \"85673791233\",\n    \"statusCode\": \"CAN\",\n    \"eventTime\": \"2023-07-13T23:15:00-05:00\"\n  }\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://dev-api.omnilogistics.com/v2/shipment/addmilestone',\n  headers: { \n    'x-api-key': '<X-API-KEY>', \n    'Content-Type': 'application/json'\n  },\n  data: data\n};\n\naxios.request(config)\n  .then((response) => {\n    console.log(JSON.stringify(response.data));\n  })\n  .catch((error) => {\n    console.log(error);\n  });"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "examples": {
                                "CAN Payload": {
                                    "value": {
                                        "addMilestoneRequest": {
                                            "housebill": "85673791233",
                                            "statusCode": "CAN",
                                            "eventTime": "2023-07-13T23:15:00-05:00"
                                        }
                                    }
                                },
                                "AAD Payload": {
                                    "value": {
                                        "addMilestoneRequest": {
                                            "housebill": "8567276",
                                            "statusCode": "AAD",
                                            "eventTime": "2023-07-13T23:15:00-05:00"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "CAN Response": {
                                        "value": {
                                            "addMilestoneResponse": {
                                                "message": "Success"
                                            }
                                        }
                                    },
                                    "AAD Response": {
                                        "value": {
                                            "addMilestoneResponse": {
                                                "message": "Success"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/schemas/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/schemas/AuthTokenMissing"
                    }
                }
            }
        },
        "/ivia/v2/shipment/addmilestone": {
            "post": {
                "operationId": "/ivia/v2/shipment/addmilestone",
                "summary": "Add Milestone",
                "tags": [
                    "ivia"
                ],
                "consumes": [
                    "application/json"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\nimport json\n\nurl = \"https://dev-api.omnilogistics.com/ivia/v2/shipment/addmilestone\"\n\npayload = json.dumps({\n \"addMilestoneRequest\": {\n  \"houseBill\": \"8424015\",\n    \"statusCode\": \"TTC\",\n  \"eventTime\": \"2023-03-27T:13:24:16-05:00\"\n }\n   })\n    headers {\n   'Content-Type': 'application/json',\n 'x-api-key': '<X-API-KEY>'\n }\n\n   response = requests.request(\"POST\", url, headers=headers, data=payload)\n\n print(response.text)\n  "
                    },
                    {
                        "lang": "Curl",
                        "source": "curl --location 'https://dev-api.omnilogistics.com/ivia/v2/shipment/addmilestone' \\\n --header 'Content-Type: application/json' \\\n --header 'x-api-key: <X-API-KEY>' \\\n  --data '{\n  \"addMilestoneRequest\": {\n  \"houseBill\": \"8424015\",\n  \"statusCode\": \"TTC\",\n  \"eventTime\": \"2023-03-27T:13:24:16-05:00\"\n     }\n     }'\n "
                    },
                    {
                        "lang": "JavaScript",
                        "source": "const axios = require('axios');\n let data = JSON.stringify({\n \"addMilestoneRequest\": {\n \"houseBill\": \"8424015\",\n     \"statusCode\": \"TTC\",\n     \"eventTime\": \"2023-03-27T:13:24:16-05:00\"\n   }\n });\n\n let config = {\n   method: 'post',\n   maxBodyLength: Infinity,\n   url: 'https://dev-api.omnilogistics.com/ivia/v2/shipment/addmilestone',\n   headers: { \n     'Content-Type': 'application/json', \n     'x-api-key': '<X-API-KEY>'\n   },\n   data : data\n };\n\n axios.request(config)\n .then((response) => {\n   console.log(JSON.stringify(response.data));\n })\n .catch((error) => {\n   console.log(error);\n });\n "
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/iviaaddMilestone"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/iviaAddMilestoneResponse"
                    },
                    "400": {
                        "$ref": "#/components/schemas/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/schemas/AuthTokenMissing"
                    }
                }
            }
        },
        "/v2/wms/order": {
            "post": {
                "operationId": "/v2/wms/order",
                "summary": "WMS order",
                "tags": [
                    "WMS"
                ],
                "consumes": [
                    "application/json"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\nimport json\n\nurl = \"https://dev-api.omnilogistics.com/v2/wms/order\"\n\npayload = json.dumps({\n  \"ShipTo\": {\n    \"Name\": \"Johnson Orthodontics\",\n    \"Street\": \"18947 John J Williams Hwy Unit 310\",\n    \"Street2\": \"\",\n    \"Street3\": \"\",\n    \"City\": \"Rehoboth Beach\",\n    \"State\": \"DE\",\n    \"Phone\": \"3026455554\",\n    \"Attention\": \"Dr. Jonathan Johnson\",\n    \"Zipcode\": \"19971\",\n    \"CountryCode\": \"US\"\n  },\n  \"BillTo\": {\n    \"Name\": \"Johnson Orthodontics\",\n    \"Street\": \"18947 John J Williams Hwy Unit 310\",\n    \"Street2\": \"\",\n    \"Street3\": \"\",\n    \"City\": \"Rehoboth Beach\",\n    \"State\": \"DE\",\n    \"Phone\": \"3026455554\",\n    \"Attention\": \"Dr. Jonathan Johnson\",\n    \"Zipcode\": \"19971\",\n    \"CountryCode\": \"US\"\n  },\n  \"LineItem\": [\n    {\n      \"StockCode\": \"FGI\",\n      \"PartNumber\": \"RS-F2-DRGR-02\",\n      \"Line\": \"1\",\n      \"Quantity\": \"3\",\n      \"Price\": \"149.00\",\n      \"Description\": \"\"\n    }\n  ],\n  \"CustomerReference\": \"IF474579A\",\n  \"PONumber\": \"\",\n  \"FreightTerms\": \"DAP\",\n  \"Forwarder\": \"UPS\",\n  \"ShipDate\":\"2022-08-23\",\n  \"Currency\": \"USD\",\n  \"ShippingNotes\": \"\",\n  \"ShippingMethod\": \"Ground\",\n  \"LocationId\": \"PHL\",\n  \"ForwarderAccount\": \"\",\n  \"SONumber\": \"US-007203173\"\n})\nheaders = {\n  'Content-Type': 'application/json',\n  'x-api-key': '<X-API-KEY>'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)\n"
                    },
                    {
                        "lang": "Curl",
                        "source": "curl --location 'https://dev-api.omnilogistics.com/v2/wms/order' \\\n--header 'Content-Type: application/json' \\\n--header 'x-api-key: <X-API-KEY>' \\\n--data '{\n    \"ShipTo\": {\n        \"Name\": \"Johnson Orthodontics\",\n        \"Street\": \"18947 John J Williams Hwy Unit 310\",\n        \"Street2\": \"\",\n        \"Street3\": \"\",\n        \"City\": \"Rehoboth Beach\",\n        \"State\": \"DE\",\n        \"Phone\": \"3026455554\",\n        \"Attention\": \"Dr. Jonathan Johnson\",\n        \"Zipcode\": \"19971\",\n        \"CountryCode\": \"US\"\n    },\n    \"BillTo\": {\n        \"Name\": \"Johnson Orthodontics\",\n        \"Street\": \"18947 John J Williams Hwy Unit 310\",\n        \"Street2\": \"\",\n        \"Street3\": \"\",\n        \"City\": \"Rehoboth Beach\",\n        \"State\": \"DE\",\n        \"Phone\": \"3026455554\",\n        \"Attention\": \"Dr. Jonathan Johnson\",\n        \"Zipcode\": \"19971\",\n        \"CountryCode\": \"US\"\n    },\n    \"LineItem\": [\n        {\n            \"StockCode\": \"FGI\",\n            \"PartNumber\": \"RS-F2-DRGR-02\",\n            \"Line\": \"1\",\n            \"Quantity\": \"3\",\n            \"Price\": \"149.00\",\n            \"Description\": \"\"\n        }\n    ],\n    \"CustomerReference\": \"IF474579A\",\n    \"PONumber\": \"\",\n    \"FreightTerms\": \"DAP\",\n    \"Forwarder\": \"UPS\",\n    \"ShipDate\": \"2022-08-23\",\n    \"Currency\": \"USD\",\n    \"ShippingNotes\": \"\",\n    \"ShippingMethod\": \"Ground\",\n    \"LocationId\": \"PHL\",\n    \"ForwarderAccount\": \"\",\n    \"SONumber\": \"US-007203173\"\n}'\n"
                    },
                    {
                        "lang": "JavaScript",
                        "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"ShipTo\": {\n    \"Name\": \"Johnson Orthodontics\",\n    \"Street\": \"18947 John J Williams Hwy Unit 310\",\n    \"Street2\": \"\",\n    \"Street3\": \"\",\n    \"City\": \"Rehoboth Beach\",\n    \"State\": \"DE\",\n    \"Phone\": \"3026455554\",\n    \"Attention\": \"Dr. Jonathan Johnson\",\n    \"Zipcode\": \"19971\",\n    \"CountryCode\": \"US\"\n  },\n  \"BillTo\": {\n    \"Name\": \"Johnson Orthodontics\",\n    \"Street\": \"18947 John J Williams Hwy Unit 310\",\n    \"Street2\": \"\",\n    \"Street3\": \"\",\n    \"City\": \"Rehoboth Beach\",\n    \"State\": \"DE\",\n    \"Phone\": \"3026455554\",\n    \"Attention\": \"Dr. Jonathan Johnson\",\n    \"Zipcode\": \"19971\",\n    \"CountryCode\": \"US\"\n  },\n  \"LineItem\": [\n    {\n      \"StockCode\": \"FGI\",\n      \"PartNumber\": \"RS-F2-DRGR-02\",\n      \"Line\": \"1\",\n      \"Quantity\": \"3\",\n      \"Price\": \"149.00\",\n      \"Description\": \"\"\n    }\n  ],\n  \"CustomerReference\": \"IF474579A\",\n  \"PONumber\": \"\",\n  \"FreightTerms\": \"DAP\",\n  \"Forwarder\": \"UPS\",\n  \"ShipDate\": \"2022-08-23\",\n  \"Currency\": \"USD\",\n  \"ShippingNotes\": \"\",\n  \"ShippingMethod\": \"Ground\",\n  \"LocationId\": \"PHL\",\n  \"ForwarderAccount\": \"\",\n  \"SONumber\": \"US-007203173\"\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://dev-api.omnilogistics.com/v2/wms/order',\n  headers: { \n    'Content-Type': 'application/json', \n    'x-api-key': '<X-API-KEY>'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Order"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/OrderResponse"
                    },
                    "400": {
                        "$ref": "#/components/schemas/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/schemas/AuthTokenMissing"
                    }
                }
            }
        },
        "/v2/wms/orderstatus": {
            "get": {
                "operationId": "/v2/wms/orderstatus",
                "summary": "WMS Order Status",
                "tags": [
                    "WMS"
                ],
                "consumes": [
                    "application/json"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.omnilogistics.com/v2/wms/orderstatus?orderNumber=W00316935\"\n\npayload = {}\nheaders = {\n  'x-api-key': '<X-API-KEY>'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data=payload)\n\nprint(response.text)\n"
                    },
                    {
                        "lang": "Curl",
                        "source": "curl --location 'https://api.omnilogistics.com/v2/wms/orderstatus?orderNumber=W00316935' \\\n--header 'x-api-key: <X-API-KEY>'"
                    },
                    {
                        "lang": "JavaScript",
                        "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.omnilogistics.com/v2/wms/orderstatus?orderNumber=W00316935',\n  headers: { \n    'x-api-key': '<X-API-KEY>'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
                    }
                ],
                "parameters": [
                    {
                        "name": "orderNumber",
                        "in": "query",
                        "description": "ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/OrderStatusResponse"
                    },
                    "400": {
                        "$ref": "#/components/schemas/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/schemas/AuthTokenMissing"
                    }
                }
            }
        },
        "/v2/shipment/addDocument": {
            "post": {
                "operationId": "/v2/shipment/addDocument",
                "summary": "Add Document",
                "tags": [
                    "Shipment"
                ],
                "consumes": [
                    "application/json"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\nimport json\n\nurl = \"https://dev-api.omnilogistics.com/v2/shipment/addDocument\"\n\npayload = json.dumps({\n  \"documentUploadRequest\": {\n    \"housebill\": \"7593713\",\n    \"contentType\": \"application/pdf\",\n    \"docType\": \"HCPOD\",\n    \"b64str\": \"<b64str>\"\n  }\n})\nheaders = {\n  'Content-Type': 'application/json',\n  'x-api-key': '<X-API-KEY>'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)\n"
                    },
                    {
                        "lang": "Curl",
                        "source": "curl --location 'https://dev-api.omnilogistics.com/v2/shipment/addDocument' \\\n--header 'Content-Type: application/json' \\\n--header 'x-api-key: <X-API-KEY>' \\\n--data '{\n    \"documentUploadRequest\": {\n        \"housebill\": \"7593713\",\n        \"contentType\": \"application/pdf\",\n        \"docType\": \"HCPOD\",\n        \"b64str\": \"<b64str>\"\n    }\n}'\n"
                    },
                    {
                        "lang": "JavaScript",
                        "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"documentUploadRequest\": {\n    \"housebill\": \"7593713\",\n    \"contentType\": \"application/pdf\",\n    \"docType\": \"HCPOD\",\n    \"b64str\": \"<b64str>\"\n  }\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://dev-api.omnilogistics.com/v2/shipment/addDocument',\n  headers: { \n    'Content-Type': 'application/json', \n    'x-api-key': '<X-API-KEY>'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/addDocument"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/addDocumentresponse"
                    },
                    "400": {
                        "$ref": "#/components/schemas/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/schemas/AuthTokenMissing"
                    }
                }
            }
        },
        "/v2/create/shipment": {
            "post": {
                "operationId": "/v2/create/shipment",
                "summary": "Create Shipment",
                "tags": [
                    "Shipment"
                ],
                "consumes": [
                    "application/json"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\nimport json\n\nurl = \"https://dev-api.omnilogistics.com/v2/create/shipment\"\n\npayload = json.dumps({\n  \"shipmentCreateRequest\": {\n    \"serviceLevel\": \"EC\",\n    \"readyTime\": \"2023-01-31T09:00:00-05:00\",\n    \"closeTime\": \"2023-01-31T17:00:00-05:00\",\n    \"deliveryWindowFrom\": \"2023-02-02T14:00:00-04:00\",\n    \"deliveryWindowTo\": \"2022-02-02T16:00:00-04:00\",\n    \"delBy\": \"Between\",\n    \"UserID\": \"WebtrakUserID\",\n    \"insuredValue\": 1234.56,\n    \"mode\": \"DOM\",\n    \"incoterm\": \"EXW\",\n    \"customerNumber\": \"9468\",\n    \"projectCode\": \"ZZZ999\",\n    \"billTo\": \"3\",\n    \"specialInstructions\": \"DRIVER WILL NEED PALLET WRAP\",\n    \"controllingStation\": \"DFW\",\n    \"shipper\": {\n      \"name\": \"Test Shipper Inc.\",\n      \"address\": \"2423 PLEASANT RD\",\n      \"address2\": \"\",\n      \"city\": \"Someplace\",\n      \"state\": \"GA\",\n      \"zip\": \"31234\",\n      \"country\": \"US\",\n      \"showName\": \"\",\n      \"venueName\": \"\",\n      \"booth\": \"\",\n      \"decorator\": \"\",\n      \"contact\": \"Test Person\",\n      \"phone\": \"8135551514\",\n      \"email\": \"test@gmail.com\"\n    },\n    \"consignee\": {\n      \"name\": \"Anonyco\",\n      \"address\": \"651W57thSt\",\n      \"address2\": \"\",\n      \"city\": \"NewNewYork\",\n      \"zip\": \"10019\",\n      \"country\": \"US\",\n      \"showName\": \"Widgits 2023\",\n      \"venueName\": \"Javits Convention Center\",\n      \"booth\": \"999a\",\n      \"decorator\": \"Decorations Inc\",\n      \"contact\": \"B.Rodriquez\",\n      \"phone\": \"2125552254\",\n      \"email\": \"matt@planetexpress.us\"\n    },\n    \"shipmentLines\": [\n      {\n        \"description\": \"EQUIPMENT\",\n        \"pieces\": 4,\n        \"pieceType\": \"PCE\",\n        \"weight\": 15,\n        \"weightUOM\": \"LB\",\n        \"length\": 12,\n        \"width\": 15,\n        \"height\": 10,\n        \"dimUOM\": \"IN\",\n        \"hazmat\": False\n      }\n    ],\n    \"customerReference\": [\n      {\n        \"refParty\": \"Shipper\",\n        \"refType\": \"PO\",\n        \"refNumber\": \"ABC123\"\n      },\n      {\n        \"refParty\": \"BillTo\",\n        \"refType\": \"REF\",\n        \"refNumber\": \"DEF456\"\n      }\n    ],\n    \"accessorialList\": [\n      \"PALL\",\n      \"SHRNK\"\n    ]\n  }\n})\nheaders = {\n  'Content-Type': 'application/json',\n  'x-api-key': '<X-API-KEY>'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)\n"
                    },
                    {
                        "lang": "Curl",
                        "source": "curl --location 'https://dev-api.omnilogistics.com/v2/create/shipment' \\\n--header 'Content-Type: application/json' \\\n--header 'x-api-key: <X-API-KEY>' \\\n--data-raw '{\n    \"shipmentCreateRequest\": {\n        \"serviceLevel\": \"EC\",\n        \"readyTime\": \"2023-01-31T09:00:00-05:00\",\n        \"closeTime\": \"2023-01-31T17:00:00-05:00\",\n        \"deliveryWindowFrom\": \"2023-02-02T14:00:00-04:00\",\n        \"deliveryWindowTo\": \"2022-02-02T16:00:00-04:00\",\n        \"delBy\": \"Between\",\n        \"UserID\": \"WebtrakUserID\",\n        \"insuredValue\": 1234.56,\n        \"mode\": \"DOM\",\n        \"incoterm\": \"EXW\",\n        \"customerNumber\": \"9468\",\n        \"projectCode\": \"ZZZ999\",\n        \"billTo\": \"3\",\n        \"specialInstructions\": \"DRIVER WILL NEED PALLET WRAP\",\n        \"controllingStation\": \"DFW\",\n        \"shipper\": {\n            \"name\": \"Test Shipper Inc.\",\n            \"address\": \"2423 PLEASANT RD\",\n            \"address2\": \"\",\n            \"city\": \"Someplace\",\n            \"state\": \"GA\",\n            \"zip\": \"31234\",\n            \"country\": \"US\",\n            \"showName\": \"\",\n            \"venueName\": \"\",\n            \"booth\": \"\",\n            \"decorator\": \"\",\n            \"contact\": \"Test Person\",\n            \"phone\": \"8135551514\",\n            \"email\": \"test@gmail.com\"\n        },\n        \"consignee\": {\n            \"name\": \"Anonyco\",\n            \"address\": \"651W57thSt\",\n            \"address2\": \"\",\n            \"city\": \"NewNewYork\",\n            \"state\": \"NY\",\n            \"zip\": \"10019\",\n            \"country\": \"US\",\n            \"showName\": \"Widgits 2023\",\n            \"venueName\": \"Javits Convention Center\",\n            \"booth\": \"999a\",\n            \"decorator\": \"Decorations Inc\",\n            \"contact\": \"B.Rodriquez\",\n            \"phone\": \"2125552254\",\n            \"email\": \"matt@planetexpress.us\"\n        },\n        \"shipmentLines\": [\n            {\n                \"description\": \"EQUIPMENT\",\n                \"pieces\": 4,\n                \"pieceType\": \"PCE\",\n                \"weight\": 15,\n                \"weightUOM\": \"LB\",\n                \"length\": 12,\n                \"width\": 15,\n                \"height\": 10,\n                \"dimUOM\": \"IN\",\n                \"hazmat\": false\n            }\n        ],\n        \"customerReference\": [\n            {\n                \"refParty\": \"Shipper\",\n                \"refType\": \"PO\",\n                \"refNumber\": \"ABC123\"\n            },\n            {\n                \"refParty\": \"BillTo\",\n                \"refType\": \"REF\",\n                \"refNumber\": \"DEF456\"\n            }\n        ],\n        \"accessorialList\": [\n            \"PALL\",\n            \"SHRNK\"\n        ]\n    }\n}'\n"
                    },
                    {
                        "lang": "JavaScript",
                        "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"shipmentCreateRequest\": {\n    \"serviceLevel\": \"EC\",\n    \"readyTime\": \"2023-01-31T09:00:00-05:00\",\n    \"closeTime\": \"2023-01-31T17:00:00-05:00\",\n    \"deliveryWindowFrom\": \"2023-02-02T14:00:00-04:00\",\n    \"deliveryWindowTo\": \"2022-02-02T16:00:00-04:00\",\n    \"delBy\": \"Between\",\n    \"UserID\": \"WebtrakUserID\",\n    \"insuredValue\": 1234.56,\n    \"mode\": \"DOM\",\n    \"incoterm\": \"EXW\",\n    \"customerNumber\": \"9468\",\n    \"projectCode\": \"ZZZ999\",\n    \"billTo\": \"3\",\n    \"specialInstructions\": \"DRIVER WILL NEED PALLET WRAP\",\n    \"controllingStation\": \"DFW\",\n    \"shipper\": {\n      \"name\": \"Test Shipper Inc.\",\n      \"address\": \"2423 PLEASANT RD\",\n      \"address2\": \"\",\n      \"city\": \"Someplace\",\n      \"state\": \"GA\",\n      \"zip\": \"31234\",\n      \"country\": \"US\",\n      \"showName\": \"\",\n      \"venueName\": \"\",\n      \"booth\": \"\",\n      \"decorator\": \"\",\n      \"contact\": \"Test Person\",\n      \"phone\": \"8135551514\",\n      \"email\": \"test@gmail.com\"\n    },\n    \"consignee\": {\n      \"name\": \"Anonyco\",\n      \"address\": \"651W57thSt\",\n      \"address2\": \"\",\n      \"city\": \"NewNewYork\",\n      \"state\": \"NY\",\n      \"zip\": \"10019\",\n      \"country\": \"US\",\n      \"showName\": \"Widgits 2023\",\n      \"venueName\": \"Javits Convention Center\",\n      \"booth\": \"999a\",\n      \"decorator\": \"Decorations Inc\",\n      \"contact\": \"B.Rodriquez\",\n      \"phone\": \"2125552254\",\n      \"email\": \"matt@planetexpress.us\"\n    },\n    \"shipmentLines\": [\n      {\n        \"description\": \"EQUIPMENT\",\n        \"pieces\": 4,\n        \"pieceType\": \"PCE\",\n        \"weight\": 15,\n        \"weightUOM\": \"LB\",\n        \"length\": 12,\n        \"width\": 15,\n        \"height\": 10,\n        \"dimUOM\": \"IN\",\n        \"hazmat\": false\n      }\n    ],\n    \"customerReference\": [\n      {\n        \"refParty\": \"Shipper\",\n        \"refType\": \"PO\",\n        \"refNumber\": \"ABC123\"\n      },\n      {\n        \"refParty\": \"BillTo\",\n        \"refType\": \"REF\",\n        \"refNumber\": \"DEF456\"\n      }\n    ],\n    \"accessorialList\": [\n      \"PALL\",\n      \"SHRNK\"\n    ]\n  }\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://dev-api.omnilogistics.com/v2/create/shipment',\n  headers: { \n    'Content-Type': 'application/json', \n    'x-api-key': '<X-API-KEY>'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/CreateShipmentRequest"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/CreateShipmentResponse"
                    },
                    "400": {
                        "$ref": "#/components/schemas/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/schemas/AuthTokenMissing"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "InvalidRequest": {
                "description": "Invalid request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errorDescription": {
                                    "description": "Error msg",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "description": "Unauthorized",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "AuthTokenMissing": {
                "description": "Missing Authentication Token",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "description": "Error msg",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "AddMilestoneResponse": {
                "description": "Success Response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "addMilestoneResponse": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "description": "Message",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "iviaAddMilestoneResponse": {
                "description": "Success Response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "addMilestoneResponse": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "description": "Message",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "addDocumentresponse": {
                "description": "Success Response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "documentUploadResponse": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "description": "Message",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "CreateShipmentResponse": {
                "description": "Success Response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "shipmentCreateResponse": {
                                    "type": "object",
                                    "properties": {
                                        "fileNumber":{
                                            "description": "File Number",
                                            "type":"string"
                                         },
                                         "housebill":{
                                            "description": "House Bill",
                                            "type":"string"
                                         }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "OrderResponse": {
                "description": "Success Response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "_original": {
                                    "type": "object",
                                    "properties": {
                                        "ShipTo": {
                                            "type": "object",
                                            "properties": {
                                                "Name": {
                                                    "description": "Name",
                                                    "type": "string"
                                                },
                                                "Street": {
                                                    "description": "Street",
                                                    "type": "string"
                                                },
                                                "Street2": {
                                                    "description": "Street2",
                                                    "type": "string"
                                                },
                                                "Street3": {
                                                    "description": "Street3",
                                                    "type": "string"
                                                },
                                                "City": {
                                                    "description": "City",
                                                    "type": "string"
                                                },
                                                "State": {
                                                    "description": "State",
                                                    "type": "string"
                                                },
                                                "Phone": {
                                                    "description": "Phone",
                                                    "type": "string"
                                                },
                                                "Attention": {
                                                    "description": "Attention",
                                                    "type": "string"
                                                },
                                                "Zipcode": {
                                                    "description": "Zip Code",
                                                    "type": "string"
                                                },
                                                "CountryCode": {
                                                    "description": "Country Code",
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "BillTo": {
                                            "type": "object",
                                            "properties": {
                                                "Name": {
                                                    "description": "Name",
                                                    "type": "string"
                                                },
                                                "Street": {
                                                    "description": "Street",
                                                    "type": "string"
                                                },
                                                "Street2": {
                                                    "description": "Street2",
                                                    "type": "string"
                                                },
                                                "Street3": {
                                                    "description": "Street3",
                                                    "type": "string"
                                                },
                                                "City": {
                                                    "description": "City",
                                                    "type": "string"
                                                },
                                                "State": {
                                                    "description": "State",
                                                    "type": "string"
                                                },
                                                "Phone": {
                                                    "description": "Phone",
                                                    "type": "string"
                                                },
                                                "Attention": {
                                                    "description": "Attention",
                                                    "type": "string"
                                                },
                                                "Zipcode": {
                                                    "description": "Zip Code",
                                                    "type": "string"
                                                },
                                                "CountryCode": {
                                                    "description": "Country Code",
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "LineItem": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "StockCode": {
                                                        "description": "Stock Code",
                                                        "type": "string"
                                                    },
                                                    "PartNumber": {
                                                        "description": "Part Number",
                                                        "type": "string"
                                                    },
                                                    "Line": {
                                                        "description": "Line",
                                                        "type": "string"
                                                    },
                                                    "Quantity": {
                                                        "description": "Quantity",
                                                        "type": "string"
                                                    },
                                                    "Price": {
                                                        "description": "Price",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "Description",
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "CustomerReference": {
                                            "description": "Customer Reference",
                                            "type": "string"
                                        },
                                        "PONumber": {
                                            "description": "PO Number",
                                            "type": "string"
                                        },
                                        "FreightTerms": {
                                            "description": "Freight Terms",
                                            "type": "string"
                                        },
                                        "Forwarder": {
                                            "description": "Forwarder",
                                            "type": "string"
                                        },
                                        "ShipDate": {
                                            "description": "Ship Date",
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "Currency": {
                                            "description": "Currency",
                                            "type": "string"
                                        },
                                        "ShippingNotes": {
                                            "description": "Shipping Notes",
                                            "type": "string"
                                        },
                                        "ShippingMethod": {
                                            "description": "Shipping Method",
                                            "type": "string"
                                        },
                                        "LocationId": {
                                            "description": "Location Id",
                                            "type": "string"
                                        },
                                        "ForwarderAccount": {
                                            "description": "Forwarder Account",
                                            "type": "string"
                                        },
                                        "SONumber": {
                                            "description": "SO Number",
                                            "type": "string"
                                        }
                                    }
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "message": {
                                                "description": "Message",
                                                "type": "string"
                                            },
                                            "path": {
                                                "type": "array",
                                                "items": {
                                                    "description": "path",
                                                    "type": "string"
                                                }
                                            },
                                            "type": {
                                                "description": "type",
                                                "type": "string"
                                            },
                                            "context": {
                                                "type": "object",
                                                "properties": {
                                                    "child": {
                                                        "description": "child",
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "description": "label",
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "object",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "Name",
                                                                "type": "string"
                                                            },
                                                            "Street": {
                                                                "description": "Street",
                                                                "type": "string"
                                                            },
                                                            "Street2": {
                                                                "description": "Street2",
                                                                "type": "string"
                                                            },
                                                            "Street3": {
                                                                "description": "Street3",
                                                                "type": "string"
                                                            },
                                                            "City": {
                                                                "description": "City",
                                                                "type": "string"
                                                            },
                                                            "State": {
                                                                "description": "State",
                                                                "type": "string"
                                                            },
                                                            "Phone": {
                                                                "description": "Phone",
                                                                "type": "string"
                                                            },
                                                            "Attention": {
                                                                "description": "Attention",
                                                                "type": "string"
                                                            },
                                                            "Zipcode": {
                                                                "description": "Zip Code",
                                                                "type": "string"
                                                            },
                                                            "CountryCode": {
                                                                "description": "Country Code",
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "key": {
                                                        "description": "key",
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "OrderStatusResponse": {
                "description": "Success Response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "wmsOrderStatusResponse": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "orderNumber": {
                                                "description": "Order Number",
                                                "type": "string"
                                            },
                                            "customerOrderNumber": {
                                                "description": "customer Order Number",
                                                "type": "string"
                                            },
                                            "orderStatus": {
                                                "description": "order Status",
                                                "type": "string"
                                            },
                                            "carrier": {
                                                "description": "carrier",
                                                "type": "string"
                                            },
                                            "trackingNumber": {
                                                "description": "tracking Number",
                                                "type": "string"
                                            },
                                            "shipDate": {
                                                "description": "ship Date",
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "warehouse": {
                                                "description": "ware house",
                                                "type": "string"
                                            },
                                            "shipTo": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "description": "name",
                                                        "type": "string"
                                                    },
                                                    "contact": {
                                                        "description": "contact",
                                                        "type": "string"
                                                    },
                                                    "city": {
                                                        "description": "city",
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "description": "state",
                                                        "type": "string"
                                                    },
                                                    "zip": {
                                                        "description": "zip",
                                                        "type": "string"
                                                    },
                                                    "country": {
                                                        "description": "country",
                                                        "type": "string"
                                                    },
                                                    "phone": {
                                                        "description": "phone",
                                                        "type": "string"
                                                    },
                                                    "address": {
                                                        "description": "address",
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "customerReference": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "refType": {
                                                            "description": "ref Type ",
                                                            "type": "string"
                                                        },
                                                        "refNumber": {
                                                            "description": "ref Number",
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "orderLines": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "lineNumber": {
                                                            "description": "line Number",
                                                            "type": "integer"
                                                        },
                                                        "partNumber": {
                                                            "description": "part Number",
                                                            "type": "string"
                                                        },
                                                        "serialNumber": {
                                                            "description": "serial Number",
                                                            "type": "string"
                                                        },
                                                        "partAttribute1": {
                                                            "description": "part Attribute1",
                                                            "type": "string"
                                                        },
                                                        "partAttribute2": {
                                                            "description": "part Attribute 2",
                                                            "type": "string"
                                                        },
                                                        "quantity": {
                                                            "type": "quantity"
                                                        },
                                                        "description": {
                                                            "description": "description",
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "requestBodies": {
            "addMilestone": {
                "description": "Request Body",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "addMilestoneRequest": {
                                    "$ref": "#/components/requestBodies/addMilestoneProperties"
                                }
                            }
                        }
                    }
                }
            },
            "iviaaddMilestone": {
                "description": "Request Body",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "addMilestoneRequest": {
                                    "$ref": "#/components/requestBodies/iviaaddMilestoneProperties"
                                }
                            }
                        }
                    }
                }
            },
            "Order": {
                "description": "Request Body",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "ShipTo": {
                                    "$ref": "#/components/requestBodies/ShipTo"
                                },
                                "BillTo": {
                                    "$ref": "#/components/requestBodies/BillTo"
                                },
                                "LineItem": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/requestBodies/LineItem"
                                    }
                                },
                                "CustomerReference": {
                                    "description": "Customer Reference",
                                    "type": "string"
                                },
                                "PONumber": {
                                    "description": "PO Number",
                                    "type": "string"
                                },
                                "FreightTerms": {
                                    "description": "Freight Terms",
                                    "type": "string"
                                },
                                "Forwarder": {
                                    "description": "Forwarder",
                                    "type": "string"
                                },
                                "ShipDate": {
                                    "description": "Ship Date",
                                    "type": "string",
                                    "format": "date"
                                },
                                "Currency": {
                                    "description": "Currency",
                                    "type": "string"
                                },
                                "ShippingNotes": {
                                    "description": "Shipping Notes",
                                    "type": "string"
                                },
                                "ShippingMethod": {
                                    "description": "Shipping Method",
                                    "type": "string"
                                },
                                "LocationId": {
                                    "description": "Location Id",
                                    "type": "string"
                                },
                                "ForwarderAccount": {
                                    "description": "Forwarder Account",
                                    "type": "string"
                                },
                                "SONumber": {
                                    "description": "SO Number",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "addDocument": {
                "description": "Request Body",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "addMilestoneRequest": {
                                    "$ref": "#/components/requestBodies/addDocumentProperties"
                                }
                            }
                        }
                    }
                }
            },
            "CreateShipmentRequest": {
                "description": "Request Body",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "ShipmentCreateRequest": {
                                    "$ref": "#/components/requestBodies/CreateShipmentProperties"
                                }
                            }
                        }
                    }
                }
            },
            "addMilestoneProperties": {
                "type": "object",
                "properties": {
                    "housebill": {
                        "description": "House bill number",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "Status code eg. 'CAN'",
                        "type": "string"
                    },
                    "eventTime": {
                        "description": "eventTime",
                        "type": "string",
                        "format": "datetime",
                        "optional": true
                    }
                },
                "example": {
                    "housebill": "85673791233",
                    "statusCode": "CAN",
                    "eventTime": "2023-07-13T23:15:00-05:00"
                }
            },
            "iviaaddMilestoneProperties": {
                "type": "object",
                "properties": {
                    "housebill": {
                        "description": "House bill number",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "Status code eg. 'CAN'",
                        "type": "string"
                    },
                    "eventTime": {
                        "description": "eventTime",
                        "type": "string",
                        "format": "datetime",
                        "optional": true
                    }
                },
                "example": {
                    "houseBill": "8424015",
                    "statusCode": "TTC",
                    "eventTime": "2023-03-27T:13:24:16-05:00"
                }
            },
            "ShipTo": {
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "Name",
                        "type": "string"
                    },
                    "Street": {
                        "description": "Street",
                        "type": "string"
                    },
                    "Street2": {
                        "description": "Street 2",
                        "type": "string"
                    },
                    "Street3": {
                        "description": "Street 3",
                        "type": "string"
                    },
                    "City": {
                        "description": "City",
                        "type": "string"
                    },
                    "State": {
                        "description": "State",
                        "type": "string"
                    },
                    "Phone": {
                        "description": "Phone",
                        "type": "string"
                    },
                    "Attention": {
                        "description": "Attention",
                        "type": "string"
                    },
                    "Zipcode": {
                        "description": "Zip Code",
                        "type": "string"
                    },
                    "CountryCode": {
                        "description": "Country Code",
                        "type": "string"
                    }
                }
            },
            "BillTo": {
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "Name",
                        "type": "string"
                    },
                    "Street": {
                        "description": "Street",
                        "type": "string"
                    },
                    "Street2": {
                        "description": "Street 2",
                        "type": "string"
                    },
                    "Street3": {
                        "description": "Street 3",
                        "type": "string"
                    },
                    "City": {
                        "description": "City",
                        "type": "string"
                    },
                    "State": {
                        "description": "State",
                        "type": "string"
                    },
                    "Phone": {
                        "description": "Phone",
                        "type": "string"
                    },
                    "Attention": {
                        "description": "Attention",
                        "type": "string"
                    },
                    "Zipcode": {
                        "description": "Zip Code",
                        "type": "string"
                    },
                    "CountryCode": {
                        "description": "Country Code",
                        "type": "string"
                    }
                }
            },
            "LineItem": {
                "type": "object",
                "properties": {
                    "StockCode": {
                        "description": "Stock Code",
                        "type": "string"
                    },
                    "PartNumber": {
                        "description": "Part Number",
                        "type": "string"
                    },
                    "Line": {
                        "description": "Line",
                        "type": "string"
                    },
                    "Quantity": {
                        "description": "Quantity",
                        "type": "string"
                    },
                    "Price": {
                        "description": "Price",
                        "type": "string"
                    },
                    "Description": {
                        "description": "Description",
                        "type": "string"
                    }
                }
            },
            "addDocumentProperties": {
                "type": "object",
                "properties": {
                    "housebill": {
                        "description": "House bill number",
                        "type": "string"
                    },
                    "contentType": {
                        "description": "content Type",
                        "type": "string"
                    },
                    "docType": {
                        "description": "document Type",
                        "type": "string"
                    },
                    "b64str": {
                        "description": "base 64",
                        "type": "string"
                    }
                },
                "example": {
                    "housebill": "7593713",
                    "contentType": "application/pdf",
                    "docType": "HCPOD",
                    "b64str": "<b64str>"
                }
            },
            "CreateShipmentProperties": {
                "type": "object",
                "properties": {
                    "serviceLevel": {
                        "description": "Service Level",
                        "type": "string"
                    },
                    "readyTime": {
                        "description": "Ready Time",
                        "type": "string",
                        "format": "date-time"
                    },
                    "closeTime": {
                        "description": "Close Time",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deliveryWindowFrom": {
                        "description": "Delivery Window From",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deliveryWindowTo": {
                        "description": "Delivery Window To",
                        "type": "string",
                        "format": "date-time"
                    },
                    "delBy": {
                        "description": "Del By",
                        "type": "string"
                    },
                    "UserID": {
                        "description": "User ID",
                        "type": "string"
                    },
                    "insuredValue": {
                        "description": "Insured Value",
                        "type": "number"
                    },
                    "mode": {
                        "description": "mode",
                        "type": "string"
                    },
                    "incoterm": {
                        "description": "incoterm",
                        "type": "string"
                    },
                    "customerNumber": {
                        "description": "Customer Number",
                        "type": "string"
                    },
                    "projectCode": {
                        "description": "Project Code",
                        "type": "string"
                    },
                    "billTo": {
                        "description": "Bill To",
                        "type": "string"
                    },
                    "specialInstructions": {
                        "description": "Special Instructions",
                        "type": "string"
                    },
                    "controllingStation": {
                        "description": "Controlling Station",
                        "type": "string"
                    },
                    "shipper": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "Name",
                                "type": "string"
                            },
                            "address": {
                                "description": "Address",
                                "type": "string"
                            },
                            "address2": {
                                "description": "Address 2",
                                "type": "string"
                            },
                            "city": {
                                "description": "City",
                                "type": "string"
                            },
                            "state": {
                                "description": "State",
                                "type": "string"
                            },
                            "zip": {
                                "description": "Zip",
                                "type": "string"
                            },
                            "country": {
                                "description": "Country",
                                "type": "string"
                            },
                            "showName": {
                                "description": "Show Name",
                                "type": "string"
                            },
                            "venueName": {
                                "description": "Venue Name",
                                "type": "string"
                            },
                            "booth": {
                                "description": "Booth",
                                "type": "string"
                            },
                            "decorator": {
                                "description": "Decorator",
                                "type": "string"
                            },
                            "contact": {
                                "description": "contact",
                                "type": "string"
                            },
                            "phone": {
                                "description": "phone",
                                "type": "string"
                            },
                            "email": {
                                "description": "email",
                                "type": "string",
                                "format": "email"
                            }
                        }
                    },
                    "consignee": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "Name",
                                "type": "string"
                            },
                            "address": {
                                "description": "Address",
                                "type": "string"
                            },
                            "address2": {
                                "description": "Address2",
                                "type": "string"
                            },
                            "city": {
                                "description": "City",
                                "type": "string"
                            },
                            "state": {
                                "description": "State",
                                "type": "string"
                            },
                            "zip": {
                                "description": "Zip",
                                "type": "string"
                            },
                            "country": {
                                "description": "Country",
                                "type": "string"
                            },
                            "showName": {
                                "description": "Show Name",
                                "type": "string"
                            },
                            "venueName": {
                                "description": "Venue Name",
                                "type": "string"
                            },
                            "booth": {
                                "description": "Booth",
                                "type": "string"
                            },
                            "decorator": {
                                "description": "Decorator",
                                "type": "string"
                            },
                            "contact": {
                                "description": "Contact",
                                "type": "string"
                            },
                            "phone": {
                                "description": "Phone",
                                "type": "string"
                            },
                            "email": {
                                "description": "email",
                                "type": "string",
                                "format": "email"
                            }
                        }
                    },
                    "shipmentLines": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "description": "Description",
                                    "type": "string"
                                },
                                "pieces": {
                                    "description": "Pieces",
                                    "type": "integer"
                                },
                                "pieceType": {
                                    "description": "Piece Type",
                                    "type": "string"
                                },
                                "weight": {
                                    "description": "Weight",
                                    "type": "number"
                                },
                                "weightUOM": {
                                    "description": "Weight UOM",
                                    "type": "string"
                                },
                                "length": {
                                    "description": "Length",
                                    "type": "number"
                                },
                                "width": {
                                    "description": "Width",
                                    "type": "number"
                                },
                                "height": {
                                    "description": "Height",
                                    "type": "number"
                                },
                                "dimUOM": {
                                    "description": "Dim UOM",
                                    "type": "string"
                                },
                                "hazmat": {
                                    "description": "hazmat",
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "customerReference": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "refParty": {
                                    "description": "Ref Party",
                                    "type": "string"
                                },
                                "refType": {
                                    "description": "Ref Type",
                                    "type": "string"
                                },
                                "refNumber": {
                                    "description": "Ref Number",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "accessorialList": {
                        "type": "array",
                        "items": {
                            "description": "Accessorial List",
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "serviceLevel": "EC",
                    "readyTime": "2023-01-31T09:00:00-05:00",
                    "closeTime": "2023-01-31T17:00:00-05:00",
                    "deliveryWindowFrom": "2023-02-02T14:00:00-04:00",
                    "deliveryWindowTo": "2022-02-02T16:00:00-04:00",
                    "delBy": "Between",
                    "UserID": "WebtrakUserID",
                    "insuredValue": 1234.56,
                    "mode": "DOM",
                    "incoterm": "EXW",
                    "customerNumber": "9468",
                    "projectCode": "ZZZ999",
                    "billTo": "3",
                    "specialInstructions": "DRIVER WILL NEED PALLET WRAP",
                    "controllingStation": "DFW",
                    "shipper": {
                        "name": "Test Shipper Inc.",
                        "address": "2423 PLEASANT RD",
                        "address2": "",
                        "city": "Someplace",
                        "state": "GA",
                        "zip": "31234",
                        "country": "US",
                        "showName": "",
                        "venueName": "",
                        "booth": "",
                        "decorator": "",
                        "contact": "Test Person",
                        "phone": "8135551514",
                        "email": "test@gmail.com"
                    },
                    "consignee": {
                        "name": "Anonyco",
                        "address": "651W57thSt",
                        "address2": "",
                        "city": "NewNewYork",
                        "state": "NY",
                        "zip": "10019",
                        "country": "US",
                        "showName": "Widgits 2023",
                        "venueName": "Javits Convention Center",
                        "booth": "999a",
                        "decorator": "Decorations Inc",
                        "contact": "B.Rodriquez",
                        "phone": "2125552254",
                        "email": "matt@planetexpress.us"
                    },
                    "shipmentLines": [
                        {
                            "description": "EQUIPMENT",
                            "pieces": 4,
                            "pieceType": "PCE",
                            "weight": 15,
                            "weightUOM": "LB",
                            "length": 12,
                            "width": 15,
                            "height": 10,
                            "dimUOM": "IN",
                            "hazmat": false
                        }
                    ],
                    "customerReference": [
                        {
                            "refParty": "Shipper",
                            "refType": "PO",
                            "refNumber": "ABC123"
                        },
                        {
                            "refParty": "BillTo",
                            "refType": "REF",
                            "refNumber": "DEF456"
                        }
                    ],
                    "accessorialList": [
                        "PALL",
                        "SHRNK"
                    ]
                }
            }
        },
        "securitySchemes": {
            "ApiKeyAuth": {
                "description": "For this sample, you can use the api key `x-api-key` to test the authorization filters.",
                "type": "apiKey",
                "name": "x-api-key",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "ApiKeyAuth": []
        }
    ]
}