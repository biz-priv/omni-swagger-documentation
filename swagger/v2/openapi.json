{
    "openapi": "3.0.0",
    "info": {
        "title": "Omni Dev Api's",
        "description": "Api Documentation",
        "version": "v2",
        "x-logo": {
            "url": "https://omni-redoc-bucket-dev.s3.amazonaws.com/logo.png",
            "backgroundColor": "#FFFFFF",
            "altText": "Bizcloud logo"
        }
    },
    "servers": [
        {
            "url": "https://dev-api.omnilogistics.com"
        }
    ],
    "tags": [
        {
            "name": "Shipment"
        },
        {
            "name": "ivia"
        },
        {
            "name": "WMS"
        }
    ],
    "paths": {
        "/v2/shipment/addmilestone": {
            "post": {
                "operationId": "/v2/shipment/addmilestone",
                "summary": "Add Milestone",
                "tags": [
                    "Shipment"
                ],
                "consumes": [
                    "application/json"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\nimport json\n\nurl = \"https://dev-api.omnilogistics.com/v2/shipment/addmilestone\"\n\npayload = json.dumps({\n  \"addMilestoneRequest\": {\n    \"housebill\": \"85673791233\",\n    \"statusCode\": \"CAN\",\n    \"eventTime\": \"2023-07-13T23:15:00-05:00\"\n  }\n})\nheaders = {\n  'x-api-key': '<X-API-KEY>',\n  'Content-Type': 'application/json'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)"
                    },
                    {
                        "lang": "Curl",
                        "source": "curl --location 'https://dev-api.omnilogistics.com/v2/shipment/addmilestone' --header 'x-api-key: <X-API-KEY>' --header 'Content-Type: application/json' --data '{\"addMilestoneRequest\":{\"housebill\":\"85673791233\",\"statusCode\":\"CAN\",\"eventTime\":\"2023-07-13T23:15:00-05:00\"}}'"
                    },
                    {
                        "lang": "JavaScript",
                        "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"addMilestoneRequest\": {\n    \"housebill\": \"85673791233\",\n    \"statusCode\": \"CAN\",\n    \"eventTime\": \"2023-07-13T23:15:00-05:00\"\n  }\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://dev-api.omnilogistics.com/v2/shipment/addmilestone',\n  headers: { \n    'x-api-key': '<X-API-KEY>', \n    'Content-Type': 'application/json'\n  },\n  data: data\n};\n\naxios.request(config)\n  .then((response) => {\n    console.log(JSON.stringify(response.data));\n  })\n  .catch((error) => {\n    console.log(error);\n  });"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "examples": {
                                "CAN Payload": {
                                    "value": {
                                        "addMilestoneRequest": {
                                            "housebill": "85673791233",
                                            "statusCode": "CAN",
                                            "eventTime": "2023-07-13T23:15:00-05:00"
                                        }
                                    }
                                },
                                "LOC Payoad": {
                                    "value": {
                                        "addMilestoneRequest": {
                                            "housebill": "5742880",
                                            "statusCode": "LOC",
                                            "eventTime": "2023-09-11T05:00:00-0400",
                                            "latitude": 35.89722,
                                            "longitude": 84.18
                                        }
                                    }
                                },
                                "DELL Payload": {
                                    "value": {
                                        "addMilestoneRequest": {
                                            "housebill": "85673791233",
                                            "statusCode": "DEL",
                                            "eventTime": "2023-07-13T23:15:00-05:00",
                                            "signatory": "some guy"
                                        }
                                    }
                                },
                                "AAD Payload": {
                                    "value": {
                                        "addMilestoneRequest": {
                                            "housebill": "8567276",
                                            "statusCode": "AAD",
                                            "eventTime": "2023-07-13T23:15:00-05:00"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "CAN Response": {
                                        "value": {
                                            "addMilestoneResponse": {
                                                "message": "Success"
                                            }
                                        }
                                    },
                                    "LOC Response": {
                                        "value": {
                                            "addMilestoneResponse": {
                                                "message": "Success"
                                            }
                                        }
                                    },
                                    "DELL Response": {
                                        "value": {
                                            "addMilestoneResponse": {
                                                "message": "Success"
                                            }
                                        }
                                    },
                                    "AAD Response": {
                                        "value": {
                                            "addMilestoneResponse": {
                                                "message": "Success"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/schemas/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/schemas/AuthTokenMissing"
                    }
                }
            }
        },
        "/ivia/v2/shipment/addmilestone": {
            "post": {
                "operationId": "/ivia/v2/shipment/addmilestone",
                "summary": "Add Milestone",
                "tags": [
                    "ivia"
                ],
                "consumes": [
                    "application/json"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\nimport json\n\nurl = \"https://dev-api.omnilogistics.com/ivia/v2/shipment/addmilestone\"\n\npayload = json.dumps({\n \"addMilestoneRequest\": {\n  \"houseBill\": \"8424015\",\n    \"statusCode\": \"TTC\",\n  \"eventTime\": \"2023-03-27T:13:24:16-05:00\"\n }\n   })\n    headers {\n   'Content-Type': 'application/json',\n 'x-api-key': '<X-API-KEY>'\n }\n\n   response = requests.request(\"POST\", url, headers=headers, data=payload)\n\n print(response.text)\n  "
                    },
                    {
                        "lang": "Curl",
                        "source": "curl --location 'https://dev-api.omnilogistics.com/ivia/v2/shipment/addmilestone' \\\n --header 'Content-Type: application/json' \\\n --header 'x-api-key: <X-API-KEY>' \\\n  --data '{\n  \"addMilestoneRequest\": {\n  \"houseBill\": \"8424015\",\n  \"statusCode\": \"TTC\",\n  \"eventTime\": \"2023-03-27T:13:24:16-05:00\"\n     }\n     }'\n "
                    },
                    {
                        "lang": "JavaScript",
                        "source": "const axios = require('axios');\n let data = JSON.stringify({\n \"addMilestoneRequest\": {\n \"houseBill\": \"8424015\",\n     \"statusCode\": \"TTC\",\n     \"eventTime\": \"2023-03-27T:13:24:16-05:00\"\n   }\n });\n\n let config = {\n   method: 'post',\n   maxBodyLength: Infinity,\n   url: 'https://dev-api.omnilogistics.com/ivia/v2/shipment/addmilestone',\n   headers: { \n     'Content-Type': 'application/json', \n     'x-api-key': '<X-API-KEY>'\n   },\n   data : data\n };\n\n axios.request(config)\n .then((response) => {\n   console.log(JSON.stringify(response.data));\n })\n .catch((error) => {\n   console.log(error);\n });\n "
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/iviaaddMilestone"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/iviaAddMilestoneResponse"
                    },
                    "400": {
                        "$ref": "#/components/schemas/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/schemas/AuthTokenMissing"
                    }
                }
            }
        },
        "/v2/wms/order": {
            "post": {
                "operationId": "/v2/wms/order",
                "summary": "WMS order",
                "tags": [
                    "WMS"
                ],
                "consumes": [
                    "application/json"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\nimport json\n\nurl = \"https://dev-api.omnilogistics.com/v2/wms/order\"\n\npayload = json.dumps({\n  \"ShipTo\": {\n    \"Name\": \"Johnson Orthodontics\",\n    \"Street\": \"18947 John J Williams Hwy Unit 310\",\n    \"Street2\": \"\",\n    \"Street3\": \"\",\n    \"City\": \"Rehoboth Beach\",\n    \"State\": \"DE\",\n    \"Phone\": \"3026455554\",\n    \"Attention\": \"Dr. Jonathan Johnson\",\n    \"Zipcode\": \"19971\",\n    \"CountryCode\": \"US\"\n  },\n  \"BillTo\": {\n    \"Name\": \"Johnson Orthodontics\",\n    \"Street\": \"18947 John J Williams Hwy Unit 310\",\n    \"Street2\": \"\",\n    \"Street3\": \"\",\n    \"City\": \"Rehoboth Beach\",\n    \"State\": \"DE\",\n    \"Phone\": \"3026455554\",\n    \"Attention\": \"Dr. Jonathan Johnson\",\n    \"Zipcode\": \"19971\",\n    \"CountryCode\": \"US\"\n  },\n  \"LineItem\": [\n    {\n      \"StockCode\": \"FGI\",\n      \"PartNumber\": \"RS-F2-DRGR-02\",\n      \"Line\": \"1\",\n      \"Quantity\": \"3\",\n      \"Price\": \"149.00\",\n      \"Description\": \"\"\n    }\n  ],\n  \"CustomerReference\": \"IF474579A\",\n  \"PONumber\": \"\",\n  \"FreightTerms\": \"DAP\",\n  \"Forwarder\": \"UPS\",\n  \"ShipDate\":\"2022-08-23\",\n  \"Currency\": \"USD\",\n  \"ShippingNotes\": \"\",\n  \"ShippingMethod\": \"Ground\",\n  \"LocationId\": \"PHL\",\n  \"ForwarderAccount\": \"\",\n  \"SONumber\": \"US-007203173\"\n})\nheaders = {\n  'Content-Type': 'application/json',\n  'x-api-key': '<X-API-KEY>'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)\n"
                    },
                    {
                        "lang": "Curl",
                        "source": "curl --location 'https://dev-api.omnilogistics.com/v2/wms/order' \\\n--header 'Content-Type: application/json' \\\n--header 'x-api-key: <X-API-KEY>' \\\n--data '{\n    \"ShipTo\": {\n        \"Name\": \"Johnson Orthodontics\",\n        \"Street\": \"18947 John J Williams Hwy Unit 310\",\n        \"Street2\": \"\",\n        \"Street3\": \"\",\n        \"City\": \"Rehoboth Beach\",\n        \"State\": \"DE\",\n        \"Phone\": \"3026455554\",\n        \"Attention\": \"Dr. Jonathan Johnson\",\n        \"Zipcode\": \"19971\",\n        \"CountryCode\": \"US\"\n    },\n    \"BillTo\": {\n        \"Name\": \"Johnson Orthodontics\",\n        \"Street\": \"18947 John J Williams Hwy Unit 310\",\n        \"Street2\": \"\",\n        \"Street3\": \"\",\n        \"City\": \"Rehoboth Beach\",\n        \"State\": \"DE\",\n        \"Phone\": \"3026455554\",\n        \"Attention\": \"Dr. Jonathan Johnson\",\n        \"Zipcode\": \"19971\",\n        \"CountryCode\": \"US\"\n    },\n    \"LineItem\": [\n        {\n            \"StockCode\": \"FGI\",\n            \"PartNumber\": \"RS-F2-DRGR-02\",\n            \"Line\": \"1\",\n            \"Quantity\": \"3\",\n            \"Price\": \"149.00\",\n            \"Description\": \"\"\n        }\n    ],\n    \"CustomerReference\": \"IF474579A\",\n    \"PONumber\": \"\",\n    \"FreightTerms\": \"DAP\",\n    \"Forwarder\": \"UPS\",\n    \"ShipDate\": \"2022-08-23\",\n    \"Currency\": \"USD\",\n    \"ShippingNotes\": \"\",\n    \"ShippingMethod\": \"Ground\",\n    \"LocationId\": \"PHL\",\n    \"ForwarderAccount\": \"\",\n    \"SONumber\": \"US-007203173\"\n}'\n"
                    },
                    {
                        "lang": "JavaScript",
                        "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"ShipTo\": {\n    \"Name\": \"Johnson Orthodontics\",\n    \"Street\": \"18947 John J Williams Hwy Unit 310\",\n    \"Street2\": \"\",\n    \"Street3\": \"\",\n    \"City\": \"Rehoboth Beach\",\n    \"State\": \"DE\",\n    \"Phone\": \"3026455554\",\n    \"Attention\": \"Dr. Jonathan Johnson\",\n    \"Zipcode\": \"19971\",\n    \"CountryCode\": \"US\"\n  },\n  \"BillTo\": {\n    \"Name\": \"Johnson Orthodontics\",\n    \"Street\": \"18947 John J Williams Hwy Unit 310\",\n    \"Street2\": \"\",\n    \"Street3\": \"\",\n    \"City\": \"Rehoboth Beach\",\n    \"State\": \"DE\",\n    \"Phone\": \"3026455554\",\n    \"Attention\": \"Dr. Jonathan Johnson\",\n    \"Zipcode\": \"19971\",\n    \"CountryCode\": \"US\"\n  },\n  \"LineItem\": [\n    {\n      \"StockCode\": \"FGI\",\n      \"PartNumber\": \"RS-F2-DRGR-02\",\n      \"Line\": \"1\",\n      \"Quantity\": \"3\",\n      \"Price\": \"149.00\",\n      \"Description\": \"\"\n    }\n  ],\n  \"CustomerReference\": \"IF474579A\",\n  \"PONumber\": \"\",\n  \"FreightTerms\": \"DAP\",\n  \"Forwarder\": \"UPS\",\n  \"ShipDate\": \"2022-08-23\",\n  \"Currency\": \"USD\",\n  \"ShippingNotes\": \"\",\n  \"ShippingMethod\": \"Ground\",\n  \"LocationId\": \"PHL\",\n  \"ForwarderAccount\": \"\",\n  \"SONumber\": \"US-007203173\"\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://dev-api.omnilogistics.com/v2/wms/order',\n  headers: { \n    'Content-Type': 'application/json', \n    'x-api-key': '<X-API-KEY>'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/Order"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/OrderResponse"
                    },
                    "400": {
                        "$ref": "#/components/schemas/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/schemas/AuthTokenMissing"
                    }
                }
            }
        },
        "/v2/wms/orderstatus": {
            "get": {
                "operationId": "/v2/wms/orderstatus",
                "summary": "WMS Order Status",
                "tags": [
                    "WMS"
                ],
                "consumes": [
                    "application/json"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://api.omnilogistics.com/v2/wms/orderstatus?orderNumber=W00316935\"\n\npayload = {}\nheaders = {\n  'x-api-key': '<X-API-KEY>'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data=payload)\n\nprint(response.text)\n"
                    },
                    {
                        "lang": "Curl",
                        "source": "curl --location 'https://api.omnilogistics.com/v2/wms/orderstatus?orderNumber=W00316935' \\\n--header 'x-api-key: <X-API-KEY>'"
                    },
                    {
                        "lang": "JavaScript",
                        "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://api.omnilogistics.com/v2/wms/orderstatus?orderNumber=W00316935',\n  headers: { \n    'x-api-key': '<X-API-KEY>'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
                    }
                ],
                "parameters": [
                    {
                        "name": "orderNumber",
                        "in": "query",
                        "description": "ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/OrderStatusResponse"
                    },
                    "400": {
                        "$ref": "#/components/schemas/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/schemas/AuthTokenMissing"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "InvalidRequest": {
                "description": "Invalid request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errorDescription": {
                                    "description": "Error msg",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "description": "Unauthorized",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "AuthTokenMissing": {
                "description": "Missing Authentication Token",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "description": "Error msg",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "AddMilestoneResponse": {
                "description": "Success Response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "addMilestoneResponse": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "description": "Message",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "iviaAddMilestoneResponse": {
                "description": "Success Response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "addMilestoneResponse": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "description": "Message",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "OrderResponse": {
                "description": "Success Response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "_original": {
                                    "type": "object",
                                    "properties": {
                                        "ShipTo": {
                                            "type": "object",
                                            "properties": {
                                                "Name": {
                                                    "description": "Name",
                                                    "type": "string"
                                                },
                                                "Street": {
                                                    "description": "Street",
                                                    "type": "string"
                                                },
                                                "Street2": {
                                                    "description": "Street2",
                                                    "type": "string"
                                                },
                                                "Street3": {
                                                    "description": "Street3",
                                                    "type": "string"
                                                },
                                                "City": {
                                                    "description": "City",
                                                    "type": "string"
                                                },
                                                "State": {
                                                    "description": "State",
                                                    "type": "string"
                                                },
                                                "Phone": {
                                                    "description": "Phone",
                                                    "type": "string"
                                                },
                                                "Attention": {
                                                    "description": "Attention",
                                                    "type": "string"
                                                },
                                                "Zipcode": {
                                                    "description": "Zip Code",
                                                    "type": "string"
                                                },
                                                "CountryCode": {
                                                    "description": "Country Code",
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "BillTo": {
                                            "type": "object",
                                            "properties": {
                                                "Name": {
                                                    "description": "Name",
                                                    "type": "string"
                                                },
                                                "Street": {
                                                    "description": "Street",
                                                    "type": "string"
                                                },
                                                "Street2": {
                                                    "description": "Street2",
                                                    "type": "string"
                                                },
                                                "Street3": {
                                                    "description": "Street3",
                                                    "type": "string"
                                                },
                                                "City": {
                                                    "description": "City",
                                                    "type": "string"
                                                },
                                                "State": {
                                                    "description": "State",
                                                    "type": "string"
                                                },
                                                "Phone": {
                                                    "description": "Phone",
                                                    "type": "string"
                                                },
                                                "Attention": {
                                                    "description": "Attention",
                                                    "type": "string"
                                                },
                                                "Zipcode": {
                                                    "description": "Zip Code",
                                                    "type": "string"
                                                },
                                                "CountryCode": {
                                                    "description": "Country Code",
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "LineItem": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "StockCode": {
                                                        "description": "Stock Code",
                                                        "type": "string"
                                                    },
                                                    "PartNumber": {
                                                        "description": "Part Number",
                                                        "type": "string"
                                                    },
                                                    "Line": {
                                                        "description": "Line",
                                                        "type": "string"
                                                    },
                                                    "Quantity": {
                                                        "description": "Quantity",
                                                        "type": "string"
                                                    },
                                                    "Price": {
                                                        "description": "Price",
                                                        "type": "string"
                                                    },
                                                    "Description": {
                                                        "description": "Description",
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "CustomerReference": {
                                            "description": "Customer Reference",
                                            "type": "string"
                                        },
                                        "PONumber": {
                                            "description": "PO Number",
                                            "type": "string"
                                        },
                                        "FreightTerms": {
                                            "description": "Freight Terms",
                                            "type": "string"
                                        },
                                        "Forwarder": {
                                            "description": "Forwarder",
                                            "type": "string"
                                        },
                                        "ShipDate": {
                                            "description": "Ship Date",
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "Currency": {
                                            "description": "Currency",
                                            "type": "string"
                                        },
                                        "ShippingNotes": {
                                            "description": "Shipping Notes",
                                            "type": "string"
                                        },
                                        "ShippingMethod": {
                                            "description": "Shipping Method",
                                            "type": "string"
                                        },
                                        "LocationId": {
                                            "description": "Location Id",
                                            "type": "string"
                                        },
                                        "ForwarderAccount": {
                                            "description": "Forwarder Account",
                                            "type": "string"
                                        },
                                        "SONumber": {
                                            "description": "SO Number",
                                            "type": "string"
                                        }
                                    }
                                },
                                "details": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "message": {
                                                "description": "Message",
                                                "type": "string"
                                            },
                                            "path": {
                                                "type": "array",
                                                "items": {
                                                    "description": "path",
                                                    "type": "string"
                                                }
                                            },
                                            "type": {
                                                "description": "type",
                                                "type": "string"
                                            },
                                            "context": {
                                                "type": "object",
                                                "properties": {
                                                    "child": {
                                                        "description": "child",
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "description": "label",
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "object",
                                                        "properties": {
                                                            "Name": {
                                                                "description": "Name",
                                                                "type": "string"
                                                            },
                                                            "Street": {
                                                                "description": "Street",
                                                                "type": "string"
                                                            },
                                                            "Street2": {
                                                                "description": "Street2",
                                                                "type": "string"
                                                            },
                                                            "Street3": {
                                                                "description": "Street3",
                                                                "type": "string"
                                                            },
                                                            "City": {
                                                                "description": "City",
                                                                "type": "string"
                                                            },
                                                            "State": {
                                                                "description": "State",
                                                                "type": "string"
                                                            },
                                                            "Phone": {
                                                                "description": "Phone",
                                                                "type": "string"
                                                            },
                                                            "Attention": {
                                                                "description": "Attention",
                                                                "type": "string"
                                                            },
                                                            "Zipcode": {
                                                                "description": "Zip Code",
                                                                "type": "string"
                                                            },
                                                            "CountryCode": {
                                                                "description": "Country Code",
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "key": {
                                                        "description": "key",
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "OrderStatusResponse": {
                "description": "Success Response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "wmsOrderStatusResponse": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "orderNumber": {
                                                "description": "Order Number",
                                                "type": "string"
                                            },
                                            "customerOrderNumber": {
                                                "description": "customer Order Number",
                                                "type": "string"
                                            },
                                            "orderStatus": {
                                                "description": "order Status",
                                                "type": "string"
                                            },
                                            "carrier": {
                                                "description": "carrier",
                                                "type": "string"
                                            },
                                            "trackingNumber": {
                                                "description": "tracking Number",
                                                "type": "string"
                                            },
                                            "shipDate": {
                                                "description": "ship Date",
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "warehouse": {
                                                "description": "ware house",
                                                "type": "string"
                                            },
                                            "shipTo": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "description": "name",
                                                        "type": "string"
                                                    },
                                                    "contact": {
                                                        "description": "contact",
                                                        "type": "string"
                                                    },
                                                    "city": {
                                                        "description": "city",
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "description": "state",
                                                        "type": "string"
                                                    },
                                                    "zip": {
                                                        "description": "zip",
                                                        "type": "string"
                                                    },
                                                    "country": {
                                                        "description": "country",
                                                        "type": "string"
                                                    },
                                                    "phone": {
                                                        "description": "phone",
                                                        "type": "string"
                                                    },
                                                    "address": {
                                                        "description": "address",
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "customerReference": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "refType": {
                                                            "description": "ref Type ",
                                                            "type": "string"
                                                        },
                                                        "refNumber": {
                                                            "description": "ref Number",
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "orderLines": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "lineNumber": {
                                                            "description": "line Number",
                                                            "type": "integer"
                                                        },
                                                        "partNumber": {
                                                            "description": "part Number",
                                                            "type": "string"
                                                        },
                                                        "serialNumber": {
                                                            "description": "serial Number",
                                                            "type": "string"
                                                        },
                                                        "partAttribute1": {
                                                            "description": "part Attribute1",
                                                            "type": "string"
                                                        },
                                                        "partAttribute2": {
                                                            "description": "part Attribute 2",
                                                            "type": "string"
                                                        },
                                                        "quantity": {
                                                            "type": "quantity"
                                                        },
                                                        "description": {
                                                            "description": "description",
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "requestBodies": {
            "addMilestone": {
                "description": "Request Body",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "addMilestoneRequest": {
                                    "$ref": "#/components/requestBodies/addMilestoneProperties"
                                }
                            }
                        }
                    }
                }
            },
            "iviaaddMilestone": {
                "description": "Request Body",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "addMilestoneRequest": {
                                    "$ref": "#/components/requestBodies/iviaaddMilestoneProperties"
                                }
                            }
                        }
                    }
                }
            },
            "Order": {
                "description": "Request Body",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "ShipTo": {
                                    "$ref": "#/components/requestBodies/ShipTo"
                                },
                                "BillTo": {
                                    "$ref": "#/components/requestBodies/BillTo"
                                },
                                "LineItem": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/requestBodies/LineItem"
                                    }
                                },
                                "CustomerReference": {
                                    "description": "Customer Reference",
                                    "type": "string"
                                },
                                "PONumber": {
                                    "description": "PO Number",
                                    "type": "string"
                                },
                                "FreightTerms": {
                                    "description": "Freight Terms",
                                    "type": "string"
                                },
                                "Forwarder": {
                                    "description": "Forwarder",
                                    "type": "string"
                                },
                                "ShipDate": {
                                    "description": "Ship Date",
                                    "type": "string",
                                    "format": "date"
                                },
                                "Currency": {
                                    "description": "Currency",
                                    "type": "string"
                                },
                                "ShippingNotes": {
                                    "description": "Shipping Notes",
                                    "type": "string"
                                },
                                "ShippingMethod": {
                                    "description": "Shipping Method",
                                    "type": "string"
                                },
                                "LocationId": {
                                    "description": "Location Id",
                                    "type": "string"
                                },
                                "ForwarderAccount": {
                                    "description": "Forwarder Account",
                                    "type": "string"
                                },
                                "SONumber": {
                                    "description": "SO Number",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "addMilestoneProperties": {
                "type": "object",
                "properties": {
                    "housebill": {
                        "description": "House bill number",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "Status code eg. 'CAN'",
                        "type": "string"
                    },
                    "eventTime": {
                        "description": "eventTime",
                        "type": "string",
                        "format": "datetime",
                        "optional": true
                    }
                },
                "example": {
                    "housebill": "85673791233",
                    "statusCode": "CAN",
                    "eventTime": "2023-07-13T23:15:00-05:00"
                }
            },
            "iviaaddMilestoneProperties": {
                "type": "object",
                "properties": {
                    "housebill": {
                        "description": "House bill number",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "Status code eg. 'CAN'",
                        "type": "string"
                    },
                    "eventTime": {
                        "description": "eventTime",
                        "type": "string",
                        "format": "datetime",
                        "optional": true
                    }
                },
                "example": {
                    "houseBill": "8424015",
                    "statusCode": "TTC",
                    "eventTime": "2023-03-27T:13:24:16-05:00"
                }
            },
            "ShipTo": {
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "Name",
                        "type": "string"
                    },
                    "Street": {
                        "description": "Street",
                        "type": "string"
                    },
                    "Street2": {
                        "description": "Street 2",
                        "type": "string"
                    },
                    "Street3": {
                        "description": "Street 3",
                        "type": "string"
                    },
                    "City": {
                        "description": "City",
                        "type": "string"
                    },
                    "State": {
                        "description": "State",
                        "type": "string"
                    },
                    "Phone": {
                        "description": "Phone",
                        "type": "string"
                    },
                    "Attention": {
                        "description": "Attention",
                        "type": "string"
                    },
                    "Zipcode": {
                        "description": "Zip Code",
                        "type": "string"
                    },
                    "CountryCode": {
                        "description": "Country Code",
                        "type": "string"
                    }
                }
            },
            "BillTo": {
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "Name",
                        "type": "string"
                    },
                    "Street": {
                        "description": "Street",
                        "type": "string"
                    },
                    "Street2": {
                        "description": "Street 2",
                        "type": "string"
                    },
                    "Street3": {
                        "description": "Street 3",
                        "type": "string"
                    },
                    "City": {
                        "description": "City",
                        "type": "string"
                    },
                    "State": {
                        "description": "State",
                        "type": "string"
                    },
                    "Phone": {
                        "description": "Phone",
                        "type": "string"
                    },
                    "Attention": {
                        "description": "Attention",
                        "type": "string"
                    },
                    "Zipcode": {
                        "description": "Zip Code",
                        "type": "string"
                    },
                    "CountryCode": {
                        "description": "Country Code",
                        "type": "string"
                    }
                }
            },
            "LineItem": {
                "type": "object",
                "properties": {
                    "StockCode": {
                        "description": "Stock Code",
                        "type": "string"
                    },
                    "PartNumber": {
                        "description": "Part Number",
                        "type": "string"
                    },
                    "Line": {
                        "description": "Line",
                        "type": "string"
                    },
                    "Quantity": {
                        "description": "Quantity",
                        "type": "string"
                    },
                    "Price": {
                        "description": "Price",
                        "type": "string"
                    },
                    "Description": {
                        "description": "Description",
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "ApiKeyAuth": {
                "description": "For this sample, you can use the api key `x-api-key` to test the authorization filters.",
                "type": "apiKey",
                "name": "x-api-key",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "ApiKeyAuth": []
        }
    ]
}