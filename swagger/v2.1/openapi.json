{
    "openapi": "3.0.0",
    "info": {
        "title": "Omni Dev Api's",
        "description": "Api Documentation",
        "version": "v2.1",
        "x-logo": {
            "url": "https://omni-redoc-bucket-dev.s3.amazonaws.com/logo.png",
            "backgroundColor": "#FFFFFF",
            "altText": "Bizcloud logo"
        }
    },
    "servers": [
        {
            "url": "https://dev-api.omnilogistics.com"
        }
    ],
    "tags": [
        {
            "name": "Shipment"
        }
    ],
    "paths": {
        "/v2.1/shipment/addmilestone": {
            "post": {
                "operationId": "/v2.1/shipment/addmilestone",
                "summary": "Add Milestone",
                "tags": [
                    "Shipment"
                ],
                "consumes": [
                    "application/json"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests    \nimport json \n\n    url = \"https://dev-api.omnilogistics.com/v2.1/shipment/addmilestone\"  \n  payload = json.dumps({  \n  \"addMilestoneRequest\": {\n    \"housebill\": \"85673791233\", \n    \"statusCode\": \"DEL\",  \n    \"eventTime\": \"2023-07-13T23:15:00-05:00\",\n    \"signatory\": \"some guy\"\n  }   \n  })\nheaders = { \n  'x-api-key': '<X-API-KEY>',\n  'Content-Type': 'application/json'   \n} \n\n    response = requests.request(\"POST\", url, headers=headers, data=payload)   \n\n    print(response.text)\n"
                    },
                    {
                        "lang": "Curl",
                        "source": "curl --location 'https://dev-api.omnilogistics.com/v2.1/shipment/addmilestone' \\\n--header 'x-api-key: <X-API-KEY>' \\\n--header 'Content-Type: application/json' \\\n--data '{\n    \"addMilestoneRequest\": {\n        \"housebill\": \"85673791233\",\n        \"statusCode\": \"DEL\",\n        \"eventTime\": \"2023-07-13T23:15:00-05:00\",\n        \"signatory\": \"some guy\"\n    }\n}\n"
                    },
                    {
                        "lang": "JavaScript",
                        "source": "const axios = require('axios');\nlet data = JSON.stringify({\n  \"addMilestoneRequest\": {\n    \"housebill\": \"85673791233\",\n    \"statusCode\": \"DEL\",\n    \"eventTime\": \"2023-07-13T23:15:00-05:00\",\n    \"signatory\": \"some guy\"\n  }\n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: 'https://dev-api.omnilogistics.com/v2.1/shipment/addmilestone',\n  headers: { \n    'x-api-key': '<X-API-KEY>',\n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)   \n.then((response) => { \n  console.log(JSON.stringify(response.data)); \n})    \n.catch((error) => {   \n  console.log(error); \n});   \n"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/addMilestone"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/AddMilestoneResponse"
                    },
                    "400": {
                        "$ref": "#/components/schemas/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/schemas/AuthTokenMissing"
                    }
                }
            }
        },
        "/v2.1/shipment/getdocument": {
            "post": {
                "operationId": "/v2.1/shipment/getdocument",
                "summary": "Get Document",
                "tags": [
                    "Shipment"
                ],
                "consumes": [
                    "application/json"
                ],
                "x-codeSamples": [
                    {
                        "lang": "Python",
                        "source": "import requests\n\nurl = \"https://dev-api.omnilogistics.com/v2.1/shipment/getdocument?housebill=SAT5810973-00&docType=BI\"\n\npayload = {}\nheaders = {\n  'x-api-key': '<X-API-KEY>'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data=payload)\n\nprint(response.text)\n"
                    },
                    {
                        "lang": "Curl",
                        "source": "curl --location 'https://dev-api.omnilogistics.com/v2.1/shipment/getdocument?housebill=SAT5810973-00&docType=BI' \\\n--header 'x-api-key: <X-API-KEY>'"
                    },
                    {
                        "lang": "JavaScript",
                        "source": "const axios = require('axios');\n\nlet config = {\n  method: 'get',\n  maxBodyLength: Infinity,\n  url: 'https://dev-api.omnilogistics.com/v2.1/shipment/getdocument?housebill=SAT5810973-00&docType=BI',\n  headers: { \n    'x-api-key': 'Fnh0D3mQsT9go5rQBzPPu1Rw9cejwcud33qpbJKQ'\n  }\n};\n\naxios.request(config)\n.then((response) => {\n  console.log(JSON.stringify(response.data));\n})\n.catch((error) => {\n  console.log(error);\n});\n"
                    }
                ],
                "parameters": [
                    {
                        "name": "housebill",
                        "in": "query",
                        "description": "ID ",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "docType",
                        "in": "query",
                        "description": "ID ",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/getDocumentResponse"
                    },
                    "400": {
                        "$ref": "#/components/schemas/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/schemas/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/schemas/AuthTokenMissing"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "InvalidRequest": {
                "description": "Invalid request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errorDescription": {
                                    "description": "Error msg",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "description": "Unauthorized",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "AuthTokenMissing": {
                "description": "Missing Authentication Token",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "description": "Error msg",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "AddMilestoneResponse": {
                "description": "Success Response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "addMilestoneResponse": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "description": "Message",
                                            "type": "string"
                                        },
                                        "id": {
                                            "description": "id",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "getDocumentResponse": {
                "description": "Success Response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "getDocumentResponse": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "description": "id",
                                            "type": "string"
                                        },
                                        "housebill": {
                                            "description": "housebill",
                                            "type": "string"
                                        },
                                        "fileNumber": {
                                            "description": "fileNumber",
                                            "type": "string"
                                        },
                                        "documents": {
                                            "description": "documents",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/documents"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "documents": {
                "type": "object",
                "properties": {
                    "filename": {
                        "description": "filename",
                        "type": "string"
                    },
                    "docType": {
                        "description": "docType ",
                        "type": "string"
                    },
                    "url": {
                        "description": "url",
                        "type": "string"
                    }
                }
            }
        },
        "requestBodies": {
            "addMilestone": {
                "description": "Request Body",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "addMilestoneRequest": {
                                    "$ref": "#/components/requestBodies/addMilestoneProperties"
                                }
                            }
                        }
                    }
                }
            },
            "addMilestoneProperties": {
                "type": "object",
                "properties": {
                    "housebill": {
                        "description": "House bill number",
                        "type": "string"
                    },
                    "statusCode": {
                        "description": "Status code eg. 'CAN'",
                        "type": "string"
                    },
                    "eventTime": {
                        "description": "eventTime",
                        "type": "string",
                        "format": "datetime",
                        "optional": true
                    },
                    "signatory": {
                        "description": "signatory",
                        "type": "string"
                    }
                },
                "example": {
                    "housebill": "85673791233",
                    "statusCode": "DEL",
                    "eventTime": "2023-07-13T23:15:00-05:00",
                    "signatory": "some guy"
                }
            }
        },
        "securitySchemes": {
            "ApiKeyAuth": {
                "description": "For this sample, you can use the api key `x-api-key` to test the authorization filters.",
                "type": "apiKey",
                "name": "x-api-key",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "ApiKeyAuth": []
        }
    ]
}